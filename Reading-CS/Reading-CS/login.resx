<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>